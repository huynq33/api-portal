import{LitElement as e,html as t,css as i}from"lit-element";import{repeat as r}from"lit-html/directives/repeat";import"../atoms/gv-button";import"../atoms/gv-icon";import{dispatchCustomEvent as o}from"../lib/events";import{classMap as l}from"lit-html/directives/class-map";export class GvTree extends e{static get properties(){return{items:{type:Array},closed:{type:Boolean,reflect:!0},selectedItem:{type:Object}}}static get styles(){return[i`:host{--c:var(--gv-tree--c, var(--gv-theme-font-color-dark, #262626));--bgc:var(--gv-tree--bgc, var(--gv-theme-neutral-color-lightest, #ffffff));--active-bdc:var(--gv-tree-active--bdc, var(--gv-theme-color, #5a7684));--active-bgc:var(--gv-tree-active--bgc, var(--gv-theme-neutral-color-dark, #d9d9d9));--gv-icon--s:var(--gv-tree-icon--s, 20px);--gv-icon--c:var(--c);background-color:var(--bgc);color:var(--c);display:flex;flex-direction:row;height:100%}.tree{padding-top:10px;transition:all 350ms ease-in-out;width:300px}.tree.closed{width:42px}.main-tree-menu{user-select:none;overflow-y:auto;overflow-x:hidden;height:calc(100% - 20px);direction:rtl}.main-tree-menu>ul{position:relative}ul{display:block;line-height:2;list-style:none;margin:0;padding:0}ul li{display:block;padding:.5em .5em .5em 1em}ul li ul{margin-bottom:-.5em;margin-top:.5em}ul li:hover:not(.folder):not(.selected)>label::before{border-right-width:4px;border-right-style:solid;border-right-color:var(--active-bgc);box-sizing:border-box}ul label{cursor:pointer;display:flex;flex-direction:row;justify-content:space-between;align-items:center;direction:ltr}ul label::before{-moz-box-sizing:border-box;box-sizing:border-box;content:'';height:3em;left:0;position:absolute;right:0}.selected>label::before{border-right-width:4px;border-right-style:solid;border-right-color:var(--active-bdc);box-sizing:border-box}.folder>label{font-weight:700}.tree-arrow{transform:rotate(90deg);cursor:pointer;opacity:.5;width:20px;height:20px}.closed .tree-arrow{transform:rotate(0)}.closed .tree-menu{height:0;transition:height .8s;display:none}.switch{cursor:pointer;opacity:.7;position:sticky;margin:0 11px 0 11px;display:flex;justify-content:flex-end}`]}constructor(){super(),this.closed=1}_onSelect(e,t){t.stopPropagation(),this.selectedItem=e,o(this,"select",e)}_onClick(e,t){t&&t.stopPropagation(),e.expanded=!e.expanded,this.requestUpdate()}_getMenuItemPage(e){return t`<label @click="${this._onSelect.bind(this,e)}"> ${e.name} </label>`}_getMenuItemFolder(e){return t` <label @click="${this._onClick.bind(this,e)}" class="${l({closed:!e.expanded})}"> ${e.name} <gv-icon class="tree-arrow" shape="code:right-circle"></gv-icon> </label> <span class="${l({closed:!e.expanded})}"> ${this._getMenu(e.children)} </span>`}_getMenu(e){return e?t`<ul class="${l({"tree-menu":!0,closed:this.closed})}"> ${r(e,e=>this._getMenuItem(e))} </ul>`:""}_getMenuItem(e){return t` ${e.children&&e.children.length>0?t`<li class="tree-menu__item folder">${this._getMenuItemFolder(e)}</li>`:t`<li class="tree-menu__item page ${e===this.selectedItem?"selected":""}"> ${this._getMenuItemPage(e)} </li>`}`}_toggleMenu(){this.closed=!this.closed,o(this,"toggle",{closed:this.closed})}render(){const e={tree:!0,closed:this.closed};return t` <div class="${l(e)}"> <div class="switch"> <gv-icon shape="${this.closed?"text:menu":"navigation:angle-double-left"}" @click="${this._toggleMenu}"></gv-icon> </div> ${t`<div class="main-tree-menu">${this._getMenu(this.items)}</div>`} </div> `}}window.customElements.define("gv-tree",GvTree);
//# sourceMappingURL=gv-tree.js.map
