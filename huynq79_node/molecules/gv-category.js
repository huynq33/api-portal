import{LitElement as t,html as e,css as i}from"lit-element";import{truncate as r}from"../lib/utils";import{classMap as o}from"lit-html/directives/class-map";import{dispatchCustomEvent as s}from"../lib/events";import{i18n as a}from"../lib/i18n";import{withSkeletonAttribute as l}from"../mixins/with-skeleton-attribute";export class GvCategory extends(l(t)){static get properties(){return{category:{type:Object},limit:{type:Number},_category:{type:Object,attribute:!1}}}static get styles(){return[...super.styles,i`:host{box-sizing:border-box;display:inline-block;margin:.2rem;vertical-align:middle;}.card{background-color:var(--gv-category--bgc,var(--gv-theme-neutral-color-lightest,#fff));border-radius:4px;display:flex;flex-direction:column;height:var(--gv-category--h,200px);padding:2rem;box-shadow:0 0 0 1px var(--gv-theme-neutral-color-dark,#bfbfbf),0 1px 3px var(--gv-theme-neutral-color-dark,#bfbfbf);transition:all .3s;position:relative}.card:hover{transform:translateY(-4px);box-shadow:0 20px 40px -14px var(--gv-theme-neutral-color,#f5f5f5);cursor:pointer}.box{display:flex}.title{flex:1;align-self:center}.title span{font-size:var(--gv-theme-font-size-s);font-weight:600;line-height:var(--gv-theme-font-size-s);margin-left:8px;opacity:.7}gv-identity-picture{height:80px;width:80px;margin:.5rem 1rem .5rem 0}.title{color:var(--gv-category--c,var(--gv-theme-font-color-dark,#262626));font-size:var(--gv-theme-font-size-xxl,30px);font-style:normal;font-weight:600;line-height:calc(var(--gv-theme-font-size-xxl,30px) + 6px)}.description{color:var(--gv-category--c,var(--gv-theme-font-color-dark,#262626));font-size:var(--gv-theme-font-size-l,16px);font-style:normal;font-weight:400;line-height:24px;opacity:.7;max-height:150px;display:-webkit-box;-webkit-line-clamp:4;-webkit-box-orient:vertical;overflow:hidden}`]}constructor(){super(),this._skeletonAttribute="category"}_get(t){return this._category?this._category[t]:""}_onClick(){s(this,"click",this._category)}render(){const t=this._get("total_apis");return e`<div @click="${this._onClick}" class="${o({card:!0,skeleton:this._skeleton,empty:this._error||this._empty})}"> ${this._error||this._empty?e` <div class="${o({skeleton:this._skeleton})}"> <span>${this._error?a("gv-category.error"):a("gv-category.empty")}</span> </div> `:e` <div class="box"> <gv-identity-picture .skeleton="${this._skeleton}" display_name="${this._get("name")}" picture="${this._get("_links")?this._get("_links").picture:""}"></gv-identity-picture> <div class="title">${this._get("name")}${t?e`<span>(${t})</span>`:""}</div> </div> <div class="description">${r(this._get("description"),this.limit)}</div>`} </div> `}}window.customElements.define("gv-category",GvCategory);
//# sourceMappingURL=gv-category.js.map
