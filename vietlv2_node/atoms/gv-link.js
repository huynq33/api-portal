import{LitElement as t,html as e,css as i}from"lit-element";import{skeleton as n}from"../styles/skeleton";import{link as r}from"../styles/link";import{classMap as a}from"lit-html/directives/class-map";import{styleMap as l}from"lit-html/directives/style-map";import{until as o}from"lit-html/directives/until";import{dispatchCustomEvent as c}from"../lib/events";import"./gv-icon";import{ifDefined as s}from"lit-html/directives/if-defined";export class GvLink extends t{static get properties(){return{active:{type:Boolean,reflect:!0},icon:{type:String},path:{type:String},title:{type:String},target:{type:String},_title:{type:String,attribute:!1},help:{type:String},skeleton:{type:Boolean},small:{type:Boolean}}}static get styles(){return[r,i`:host{display:inline-flex;vertical-align:middle;--gv-icon--s:var(--gv-link-icon--s, 24px);--link-active--c:var(--gv-link-active--c, var(--gv-theme-font-color-light, #ffffff));--link--c:var(--gv-link--c, var(--gv-theme-font-color-dark, #262626));--pv:var(--gv-link-a--pv, 15px);--ph:var(--gv-link-a--ph, 15px)}*,:after,:before{box-sizing:border-box}a{opacity:1;padding:var(--pv) var(--ph);color:var(--link--c);background-color:var(--gv-link--bgc,transparent);width:100%;display:inline-flex;align-content:center;text-align:var(--gv-link--ta,center);text-shadow:var(--gv-link--tsh,none);border-color:var(--gv-link--bgc,transparent);border-style:var(--gv-link-active--bds,none);border-width:var(--gv-link-active--bdw,none)}a>*{align-self:center}.active{color:var(--link-active--c);background-color:var(--gv-link-active--bgc,var(--gv-theme-color-dark,#28444f));border-color:var(--gv-tag-major--bgc,none)}.link.active:hover{opacity:1}a gv-icon,a span{align-self:center}a span{flex:1;align-self:center;white-space:nowrap;margin:.3rem .5rem;text-decoration:var(--gv-link--td,none);text-overflow:ellipsis;overflow:hidden}a.small span{margin:.3rem 0;width:0;visibility:hidden}.help{margin:0 .2rem;opacity:.5;font-size:var(--gv-theme-font-size-xs,10px)}.help::before{content:'('}.help::after{content:')'}.skeleton{min-width:100px;margin:0 .2rem;opacity:.5}`,n]}async _onClick(t){t.preventDefault(),c(this,"click",{active:this.active,icon:this.icon,path:this.path,title:this._title,target:this.target})}set title(t){Promise.resolve(t).then(t=>{this._title=t}).catch(t=>{})}render(){const t={active:this.active,link:!0,skeleton:this.skeleton,small:this.small},i=this.active?{"--gv-icon--c":"var(--link-active--c)","--gv-icon-opacity--c":"var(--link-active--c)"}:{"--gv-icon--c":"var(--link--c)","--gv-icon-opacity--c":"var(--link--c)"};return e` <a @click="${this._onClick}" class="${a(t)}" .href="${s(this.path)}" .target="${s(this.target)}" ?title="${o(this._title,"")}"> ${this.icon?e`<gv-icon shape="${this.icon}" style="${l(i)}"></gv-icon>`:""} <span>${o(this._title,"")}${this.help?e`<span class="help">${o(this.help,"")}</span>`:""}</span> </a> `}}window.customElements.define("gv-link",GvLink);
//# sourceMappingURL=gv-link.js.map